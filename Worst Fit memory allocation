#include <stdio.h>

int main() {
    int blockSize[10], processSize[10], blockNo[10];
    int m, n, i, j;

    printf("Enter number of memory blocks: ");
    scanf("%d", &m);

    printf("Enter size of each block:\n");
    for (i = 0; i < m; i++) {
        printf("Block %d: ", i+1);
        scanf("%d", &blockSize[i]);
    }

    printf("Enter number of processes: ");
    scanf("%d", &n);

    printf("Enter size of each process:\n");
    for (i = 0; i < n; i++) {
        printf("Process %d: ", i+1);
        scanf("%d", &processSize[i]);
    }

    // Initialize allocation array
    for (i = 0; i < n; i++) {
        blockNo[i] = -1;
    }

    // Worst Fit Allocation
    for (i = 0; i < n; i++) {
        int worstIdx = -1;
        for (j = 0; j < m; j++) {
            if (blockSize[j] >= processSize[i]) {
                if (worstIdx == -1 || blockSize[j] > blockSize[worstIdx]) {
                    worstIdx = j;
                }
            }
        }

        if (worstIdx != -1) {
            // Allocate block j to process i
            blockNo[i] = worstIdx + 1; // +1 for human-readable block number
            blockSize[worstIdx] -= processSize[i];
        }
    }

    printf("\nProcess No.\tProcess Size\tBlock No.\n");
    for (i = 0; i < n; i++) {
        printf("%d\t\t%d\t\t", i+1, processSize[i]);
        if (blockNo[i] != -1)
            printf("%d\n", blockNo[i]);
        else
            printf("Not Allocated\n");
    }

    return 0;
}
